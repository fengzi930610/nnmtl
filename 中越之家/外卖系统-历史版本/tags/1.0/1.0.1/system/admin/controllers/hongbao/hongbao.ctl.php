<?php/** * Copy Right IJH.CC * Each engineer has a duty to keep the code elegant * $Id$ */if(!defined('__CORE_DIR')){    exit("Access Denied");}class Ctl_Hongbao_Hongbao extends Ctl{    public function InitializeApp()    {        parent::InitializeApp();        $types = K::M('hongbao/hongbao')->getType();        $this->pagedata['types'] = $types;    }    public function index($page=1)    {        $filter = $pager = array();        $pager['page'] = max(intval($page), 1);        $pager['limit'] = $limit = 50;        if($SO = $this->GP('SO')){            $pager['SO'] = $SO;            if($SO['title']){                $filter['title'] = "LIKE:%".$SO['title']."%";            }            if($SO['uid']){                $filter['uid'] = (int)$SO['uid'];            }            if(is_array($SO['min_amount'])){                $a = intval($SO['min_amount'][0]);                $b=intval($SO['min_amount'][1]);                if($a && $b){                    $filter['min_amount'] = $a."~".$b;                }            }            if(is_array($SO['amount'])){                $a = intval($SO['amount'][0]);                $b=intval($SO['amount'][1]);                if($a && $b){                    $filter['amount'] = $a."~".$b;                }            }            if($SO['type']){                $filter['type'] = $SO['type'];            }            if(is_array($SO['ltime'])){                if($SO['ltime'][0] && $SO['ltime'][1]){                    $a = strtotime($SO['ltime'][0]);                    $b = strtotime($SO['ltime'][1])+86400;                    $filter['ltime'] = $a."~".$b;                }            }            if($SO['order_id']){                $filter['order_id'] = $SO['order_id'];            }            if(is_array($SO['used_time'])){                if($SO['used_time'][0] && $SO['used_time'][1]){                    $a = strtotime($SO['used_time'][0]);                    $b = strtotime($SO['used_time'][1])+86400;                    $filter['used_time'] = $a."~".$b;                }            }            if(is_array($SO['dateline'])){                if($SO['dateline'][0] && $SO['dateline'][1]){                    $a = strtotime($SO['dateline'][0]);                    $b = strtotime($SO['dateline'][1])+86400;                    $filter['dateline'] = $a."~".$b;                }            }            //4.0模糊查询            if($SO['keywords']){                if((int)$SO['keywords'] ){                    $filter[':SQL'] = " (o.title LIKE '%".$SO['keywords']."%' OR o.uid='".(int)$SO['keywords']."' OR w.nickname LIKE '%".$SO['keywords']."%' OR w.mobile LIKE '%".$SO['keywords']."%')";                }else{                    $filter[':SQL'] = " (o.title LIKE '%".$SO['keywords']."%' OR w.nickname LIKE '%".$SO['keywords']."%' OR w.mobile LIKE '%".$SO['keywords']."%')";                }            }        }        if($items = K::M('hongbao/hongbao')->items_join_member($filter, array('hongbao_id'=>'desc'), $page, $limit, $count)){            $pager['count'] = $count;            $pager['pagebar'] = $this->mkpage($count, $limit, $page, $this->mklink(null, array('{page}')), array('SO'=>$SO));        }        /*$uids = array();        foreach($items as $k=>$val){            $uids[$val['uid']] = $val['uid'];        }        $this->pagedata['users'] = K::M('member/member')->items_by_ids($uids);*/        $this->pagedata['types'] = K::M('hongbao/hongbao')->getType();        $this->pagedata['items'] = $items;        $this->pagedata['pager'] = $pager;        $this->tmpl = 'admin:hongbao/hongbao/items.html';    }    public function so()    {        $this->tmpl = 'admin:hongbao/hongbao/so.html';    }    public function detail($hongbao_id = null)    {        if(!$hongbao_id = (int)$hongbao_id){            $this->msgbox->add('未指定要查看内容的ID', 211);        }else if(!$detail = K::M('hongbao/hongbao')->detail($hongbao_id)){            $this->msgbox->add('您要查看的内容不存在或已经删除', 212);        }else{            if($uid = $detail['uid']){                $this->pagedata['member'] = K::M('member/member')->detail($uid);            }            $this->pagedata['detail'] = $detail;            $this->pagedata['types'] = K::M('hongbao/hongbao')->getType();            $this->tmpl = 'admin:hongbao/hongbao/detail.html';        }    }    public function add()    {        if($data = $this->checksubmit('data')){            /*if(($data['limit_stime']&&$data['limit_ltime'])&&($data['limit_stime']>$data['limit_ltime'])){                $this->msgbox->add('红包时间错误',201)->response();            }*/            //v3.6            $limit_stime = trim($data['limit_stime']);            $limit_ltime = trim($data['limit_ltime']);            if(!K::M('helper/format')->checkTimes($limit_stime, $limit_ltime)){                $this->msgbox->add('红包使用时间不正确',201)->response();            }            $data['type'] = 0;            if($hongbao_id = K::M('hongbao/hongbao')->add($data)){                $this->msgbox->add('添加内容成功');                $this->msgbox->set_data('forward', '?hongbao/hongbao-index.html');            }        }else{           $this->tmpl = 'admin:hongbao/hongbao/add.html';        }    }    public function create()    {        if($data = $this->checksubmit('data')){            $data['ltime'] = strtotime($data['ltime']);            /*if((trim($data['limit_stime'])&&trim($data['limit_ltime']))&&(strtotime($data['limit_stime'])>strtotime($data['limit_ltime']))){                $this->msgbox->add('红包时间设置不正确',201)->response();            }*/            //v3.6            $limit_stime = trim($data['limit_stime']);            $limit_ltime = trim($data['limit_ltime']);            if(!K::M('helper/format')->checkTimes($limit_stime, $limit_ltime)){                $this->msgbox->add('红包使用时间不正确',201)->response();            }            $data['type'] = 2;            if($hongbao_id = K::M('hongbao/hongbao')->create($data)){                if($data['uid']){                    if($data['uid']){                        $title = sprintf('恭喜你获得一个%s元红包', $data['amount']);                        $content = sprintf('恭喜你获得一个%s元红包,订单满%s可用', $data['amount'], $data['min_amount']);                        K::M('member/member')->send($data['uid'], $title, $content, array('type'=>'hongbao'));                    }                }                $this->msgbox->add('添加内容成功');                $this->msgbox->set_data('forward', '?hongbao/hongbao-index.html');            }        }else{           $this->tmpl = 'admin:hongbao/hongbao/create.html';        }    }    public function edit($hongbao_id=null)    {        if(!($hongbao_id = (int)$hongbao_id) && !($hongbao_id = $this->GP('hongbao_id'))){            $this->msgbox->add('未指定要修改的内容ID', 211);        }else if(!$detail = K::M('hongbao/hongbao')->detail($hongbao_id)){            $this->msgbox->add('您要修改的内容不存在或已经删除', 212);        }else if($data = $this->checksubmit('data')){            //v3.6            $limit_stime = trim($data['limit_stime']);            $ltime_ltime = trim($data['limit_ltime']);            if(!K::M('helper/format')->checkTimes($limit_stime, $limit_ltime)){                $this->msgbox->add('红包使用时间不正确',201)->response();            }            if(K::M('hongbao/hongbao')->update($hongbao_id, $data)){                $info  = K::M('hongbao/hongbao')->detail($hongbao_id);                if($info['uid'] && ($info['uid'] != $detail['uid'])){                    $title = sprintf('恭喜你获得一个%s元红包', $info['amount']);                    $content = sprintf('恭喜你获得一个%s元红包,订单满%s可用', $info['amount'], $info['min_amount']);                    K::M('member/member')->send($data['uid'], $title, $content, array('type'=>'hongbao'));                }                $this->msgbox->add('修改内容成功');            }        }else{            $this->pagedata['detail'] = $detail;                $user= K::M('member/member')->detail($detail['uid']);                $this->pagedata['user'] = $user;            $this->tmpl = 'admin:hongbao/hongbao/edit.html';        }    }    public function doaudit($hongbao_id=null)    {        if($hongbao_id = (int)$hongbao_id){            if(K::M('hongbao/hongbao')->batch($hongbao_id, array('audit'=>1))){                $this->msgbox->add('审核内容成功');            }        }else if($ids = $this->GP('hongbao_id')){            if(K::M('hongbao/hongbao')->batch($ids, array('audit'=>1))){                $this->msgbox->add('批量审核内容成功');            }        }else{            $this->msgbox->add('未指定要审核的内容', 401);        }    }    public function delete($hongbao_id=null)    {        if($hongbao_id = (int)$hongbao_id){            if(!$detail = K::M('hongbao/hongbao')->detail($hongbao_id)){                $this->msgbox->add('你要删除的内容不存在或已经删除', 211);            }else{                if(K::M('hongbao/hongbao')->delete($hongbao_id)){                    $this->msgbox->add('删除内容成功');                }            }        }else if($ids = $this->GP('hongbao_id')){            if(K::M('hongbao/hongbao')->delete($ids)){                $this->msgbox->add('批量删除内容成功');            }        }else{            $this->msgbox->add('未指定要删除的内容ID', 401);        }    }    public function getTime()    {        if($stime = (int)$this->GP('stime')){            $res = K::M('helper/format')->morrowTime($stime+15*60, 115200, 15);        }else if($ltime = (int)$this->GP('ltime')){            $ltime = min($ltime, 86400);            $res = K::M('helper/format')->morrowTime(0, $ltime-15*60, 15);        }else{            $res = K::M('helper/format')->morrowTime(0, 86400-15*60, 15);        }        $this->msgbox->add('SUCCESS');        $this->msgbox->set_data('data',$res);    }    public function multipy_send()    {        if(!$data = $this->checksubmit('data')){            $this->msgbox->add('数据有误！',211);        }else if(!$title = $data['title']){            $this->msgbox->add('标题不能为空！',212);        }else if(!$min_amount = $data['min_amount']){            $this->msgbox->add('订单最低金额不能为空！',213);        }else if(!$amount = $data['amount']){            $this->msgbox->add('红包金额不能为空！',214);        }else if($amount > $min_amount){            $this->msgbox->add('红包金额不能大于订单最低金额！',215);        }else if(!$ltime = $data['ltime']){            $this->msgbox->add('过期时间不能为空！',216);//不设置红包使用时间段则全天使用//        }else if(!($limit_stime = trim($data['limit_stime'])) || !($limit_ltime = trim($data['limit_ltime']))){//            $this->msgbox->add('使用时间不能为空！',217);//        }else if(!K::M('helper/format')->checkTimes($limit_stime, $limit_ltime)){//            $this->msgbox->add('红包使用时间不正确',218);        }else if(!$uids = $data['uid']){            $this->msgbox->add('请选择用户！',219);        }else{            $create_data = array(                    'title'=>$title,                    'from'=>$data['from'],                    'min_amount'=>$min_amount,                    'amount'=>$amount,                    'ltime'=>$ltime                );            $limit_stime = trim($data['limit_stime']);            $limit_ltime = trim($data['limit_ltime']);            if($limit_stime && $limit_ltime){                if(!K::M('helper/format')->checkTimes($limit_stime, $limit_ltime)){                    $this->msgbox->add('红包使用时间不正确',218)->response();                }                $create_data['limit_stime'] = $limit_stime;                $create_data['limit_ltime'] = $limit_ltime;            }            $err = 0;            $errmsg = '';            foreach ($uids as $k => $v) {                $create_data['uid'] = $v;                if(!K::M('hongbao/hongbao')->add($create_data)){                    $err += 1;                    $errmsg .= $v.',';                }            }            if($err > 0){                $this->msgbox->add('ID为'.rtrim($errmsg,',').'的用户添加失败！');            }else{                $this->msgbox->add('添加成功！');            }        }                    }}